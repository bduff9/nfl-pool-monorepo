/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Decimal = ColumnType<string, number | string>;

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = ColumnType<JsonValue, string, string>;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export interface Accounts {
  AccountAccessToken: string | null;
  AccountAccessTokenExpires: Date | null;
  AccountAdded: Generated<Date>;
  AccountAddedBy: string;
  AccountCompoundID: string;
  AccountDeleted: Date | null;
  AccountDeletedBy: string | null;
  AccountID: Generated<number>;
  AccountProviderAccountID: string;
  AccountProviderID: string;
  AccountProviderType: string;
  AccountRefreshToken: string | null;
  AccountUpdated: Generated<Date>;
  AccountUpdatedBy: string;
  UserID: number;
}

export interface ApiCalls {
  ApiCallDate: Date;
  ApiCallError: string | null;
  ApiCallID: Generated<number>;
  ApiCallResponse: Json | null;
  ApiCallUrl: string;
  ApiCallWeek: number | null;
  ApiCallYear: number;
}

export interface APICalls {
  APICallAdded: Generated<Date>;
  APICallAddedBy: string;
  APICallDate: Generated<Date>;
  APICallDeleted: Date | null;
  APICallDeletedBy: string | null;
  APICallError: string | null;
  APICallID: Generated<number>;
  APICallResponse: string | null;
  APICallUpdated: Generated<Date>;
  APICallUpdatedBy: string;
  APICallURL: string;
  APICallWeek: number | null;
  APICallYear: number;
}

export interface Devices {
  DeviceAdded: Generated<Date>;
  DeviceAddedBy: string;
  DeviceDeleted: Date | null;
  DeviceDeletedBy: string | null;
  DeviceID: Generated<number>;
  DeviceSub: string;
  DeviceType: string;
  DeviceUpdated: Generated<Date>;
  DeviceUpdatedBy: string;
  UserID: number;
}

export interface Emails {
  EmailCreatedAt: Date;
  EmailHtml: string | null;
  EmailID: string;
  EmailSms: string | null;
  EmailSubject: string | null;
  EmailTextOnly: string | null;
  EmailTo: string;
  EmailType: string;
  EmailUpdatedAt: Date | null;
}

export interface Games {
  GameAdded: Generated<Date>;
  GameAddedBy: string;
  GameDeleted: Date | null;
  GameDeletedBy: string | null;
  GameHasPossession: number | null;
  GameHomeScore: Generated<number>;
  GameHomeSpread: Decimal | null;
  GameID: number;
  GameInRedzone: number | null;
  GameKickoff: Date;
  GameNumber: number;
  GameStatus: Generated<
    | "1st Quarter"
    | "2nd Quarter"
    | "3rd Quarter"
    | "4th Quarter"
    | "Final"
    | "Half Time"
    | "Invalid"
    | "Overtime"
    | "Pregame"
  >;
  GameTimeLeftInQuarter: Generated<string>;
  GameTimeLeftInSeconds: Generated<number>;
  GameUpdated: Generated<Date>;
  GameUpdatedBy: string;
  GameVisitorScore: Generated<number>;
  GameVisitorSpread: Decimal | null;
  GameWeek: number;
  HomeTeamID: number;
  VisitorTeamID: number;
  WinnerTeamID: number | null;
}

export interface History {
  HistoryAdded: Generated<Date>;
  HistoryAddedBy: string;
  HistoryDeleted: Date | null;
  HistoryDeletedBy: string | null;
  HistoryID: Generated<number>;
  HistoryPlace: number;
  HistoryType: "Overall" | "Survivor" | "Weekly";
  HistoryUpdated: Generated<Date>;
  HistoryUpdatedBy: string;
  HistoryWeek: number | null;
  HistoryYear: number;
  LeagueID: number;
  UserID: number;
}

export interface Leagues {
  LeagueAdded: Generated<Date>;
  LeagueAddedBy: string;
  LeagueAdmin: number;
  LeagueDeleted: Date | null;
  LeagueDeletedBy: string | null;
  LeagueID: Generated<number>;
  LeagueName: string;
  LeagueUpdated: Generated<Date>;
  LeagueUpdatedBy: string;
}

export interface Logs {
  LeagueID: number | null;
  LogAction:
    | "404"
    | "AUTH_ERROR"
    | "BACKUP_RESTORE"
    | "CREATE_ACCOUNT"
    | "EMAIL_ACTIVITY"
    | "LINK_ACCOUNT"
    | "LOGIN"
    | "LOGOUT"
    | "MESSAGE"
    | "PAID"
    | "REGISTER"
    | "SLACK"
    | "SUBMIT_PICKS"
    | "SUPPORT_SEARCH"
    | "SURVIVOR_PICK"
    | "UNSUBSCRIBE"
    | "VIEW_HTML_EMAIL";
  LogAdded: Generated<Date>;
  LogAddedBy: string;
  LogData: Json | null;
  LogDate: Generated<Date>;
  LogDeleted: Date | null;
  LogDeletedBy: string | null;
  LogID: Generated<number>;
  LogMessage: string | null;
  LogUpdated: Generated<Date>;
  LogUpdatedBy: string;
  UserID: number | null;
}

export interface Migrations {
  id: Generated<number>;
  name: string;
  timestamp: number;
}

export interface Notifications {
  NotificationAdded: Generated<Date>;
  NotificationAddedBy: string;
  NotificationDeleted: Date | null;
  NotificationDeletedBy: string | null;
  NotificationEmail: Generated<number>;
  NotificationEmailHoursBefore: number | null;
  NotificationID: Generated<number>;
  NotificationPushNotification: Generated<number>;
  NotificationPushNotificationHoursBefore: number | null;
  NotificationSMS: Generated<number>;
  NotificationSMSHoursBefore: number | null;
  NotificationType: string;
  NotificationUpdated: Generated<Date>;
  NotificationUpdatedBy: string;
  UserID: number;
}

export interface NotificationTypes {
  NotificationType: string;
  NotificationTypeAdded: Generated<Date>;
  NotificationTypeAddedBy: string;
  NotificationTypeDeleted: Date | null;
  NotificationTypeDeletedBy: string | null;
  NotificationTypeDescription: string;
  NotificationTypeHasEmail: Generated<number>;
  NotificationTypeHasHours: number;
  NotificationTypeHasPushNotification: Generated<number>;
  NotificationTypeHasSMS: Generated<number>;
  NotificationTypeTooltip: string | null;
  NotificationTypeUpdated: Generated<Date>;
  NotificationTypeUpdatedBy: string;
}

export interface OverallMV {
  GamesCorrect: number;
  GamesMissed: number;
  GamesPossible: number;
  GamesTotal: number;
  GamesWrong: number;
  IsEliminated: Generated<number>;
  LastUpdated: Generated<Date>;
  OverallMVID: Generated<number>;
  PointsEarned: number;
  PointsPossible: number;
  PointsTotal: number;
  PointsWrong: number;
  Rank: Generated<number>;
  TeamName: string;
  Tied: Generated<number>;
  UserID: number;
  UserName: string;
}

export interface Payments {
  PaymentAdded: Generated<Date>;
  PaymentAddedBy: string;
  PaymentAmount: Decimal;
  PaymentDeleted: Date | null;
  PaymentDeletedBy: string | null;
  PaymentDescription: string;
  PaymentID: Generated<number>;
  PaymentType: "Fee" | "Paid" | "Payout" | "Prize";
  PaymentUpdated: Generated<Date>;
  PaymentUpdatedBy: string;
  PaymentWeek: number | null;
  UserID: number;
}

export interface Picks {
  GameID: number;
  LeagueID: number;
  PickAdded: Generated<Date>;
  PickAddedBy: string;
  PickDeleted: Date | null;
  PickDeletedBy: string | null;
  PickID: Generated<number>;
  PickPoints: number | null;
  PickUpdated: Generated<Date>;
  PickUpdatedBy: string;
  TeamID: number | null;
  UserID: number;
}

export interface Sessions {
  SessionAccessToken: string;
  SessionAdded: Generated<Date>;
  SessionAddedBy: string;
  SessionDeleted: Date | null;
  SessionDeletedBy: string | null;
  SessionExpires: Generated<Date>;
  SessionID: Generated<number>;
  SessionToken: string;
  SessionUpdated: Generated<Date>;
  SessionUpdatedBy: string;
  UserID: number;
}

export interface SupportContent {
  SupportContentAdded: Generated<Date>;
  SupportContentAddedBy: string;
  SupportContentCategory: string | null;
  SupportContentDeleted: Date | null;
  SupportContentDeletedBy: string | null;
  SupportContentDescription: string;
  SupportContentDescription2: string | null;
  SupportContentID: Generated<number>;
  SupportContentKeywords: string | null;
  SupportContentOrder: number;
  SupportContentType: "FAQ" | "Rule";
  SupportContentUpdated: Generated<Date>;
  SupportContentUpdatedBy: string;
}

export interface SurvivorMV {
  CurrentStatus: "Alive" | "Dead" | "Waiting" | null;
  IsAliveOverall: number;
  LastPick: number | null;
  LastUpdated: Generated<Date>;
  Rank: Generated<number>;
  SurvivorMVID: Generated<number>;
  TeamName: string;
  Tied: Generated<number>;
  UserID: number;
  UserName: string;
  WeeksAlive: number;
}

export interface SurvivorPicks {
  GameID: number;
  LeagueID: number;
  SurvivorPickAdded: Generated<Date>;
  SurvivorPickAddedBy: string;
  SurvivorPickDeleted: Date | null;
  SurvivorPickDeletedBy: string | null;
  SurvivorPickID: Generated<number>;
  SurvivorPickUpdated: Generated<Date>;
  SurvivorPickUpdatedBy: string;
  SurvivorPickWeek: number;
  TeamID: number | null;
  UserID: number;
}

export interface SystemValues {
  SystemValueAdded: Generated<Date>;
  SystemValueAddedBy: string;
  SystemValueDeleted: Date | null;
  SystemValueDeletedBy: string | null;
  SystemValueID: Generated<number>;
  SystemValueName: string;
  SystemValueUpdated: Generated<Date>;
  SystemValueUpdatedBy: string;
  SystemValueValue: string | null;
}

export interface Teams {
  TeamAdded: Generated<Date>;
  TeamAddedBy: string;
  TeamAltShortName: string;
  TeamByeWeek: number;
  TeamCity: string;
  TeamConference: "AFC" | "NFC";
  TeamDeleted: Date | null;
  TeamDeletedBy: string | null;
  TeamDivision: "East" | "North" | "South" | "West";
  TeamID: number;
  TeamLogo: string;
  TeamName: string;
  TeamPassDefenseRank: number | null;
  TeamPassOffenseRank: number | null;
  TeamPrimaryColor: string;
  TeamRushDefenseRank: number | null;
  TeamRushOffenseRank: number | null;
  TeamSecondaryColor: string;
  TeamShortName: string;
  TeamUpdated: Generated<Date>;
  TeamUpdatedBy: string;
}

export interface Tiebreakers {
  LeagueID: number;
  TiebreakerAdded: Generated<Date>;
  TiebreakerAddedBy: string;
  TiebreakerDeleted: Date | null;
  TiebreakerDeletedBy: string | null;
  TiebreakerHasSubmitted: Generated<number | null>;
  TiebreakerID: Generated<number>;
  TiebreakerLastScore: Generated<number>;
  TiebreakerUpdated: Generated<Date>;
  TiebreakerUpdatedBy: string;
  TiebreakerWeek: number;
  UserID: number;
}

export interface UserHistory {
  LeagueID: number;
  UserHistoryID: Generated<number>;
  UserHistoryOverallPlace: number | null;
  UserHistoryYear: number;
  UserID: number;
}

export interface UserLeagues {
  LeagueID: number;
  UserID: number;
  UserLeagueAdded: Generated<Date>;
  UserLeagueAddedBy: string;
  UserLeagueDeleted: Date | null;
  UserLeagueDeletedBy: string | null;
  UserLeagueID: Generated<number>;
  UserLeagueUpdated: Generated<Date>;
  UserLeagueUpdatedBy: string;
}

export interface Users {
  UserAdded: Generated<Date>;
  UserAddedBy: string;
  UserAutoPicksLeft: Generated<number>;
  UserAutoPickStrategy: Generated<"Away" | "Home" | "Random">;
  UserCommunicationsOptedOut: Generated<number>;
  UserDeleted: Date | null;
  UserDeletedBy: string | null;
  UserDoneRegistering: Generated<number>;
  UserEmail: string;
  UserEmailVerified: Date | null;
  UserFirstName: string | null;
  UserID: Generated<number>;
  UserImage: string | null;
  UserIsAdmin: Generated<number>;
  UserLastName: string | null;
  UserName: string | null;
  UserPasswordHash: string | null;
  UserPaymentAccount: string | null;
  UserPaymentType: "Paypal" | "Venmo" | "Zelle" | null;
  UserPhone: string | null;
  UserPlaysSurvivor: Generated<number>;
  UserReferredBy: number | null;
  UserReferredByRaw: string | null;
  UserTeamName: string | null;
  UserTrusted: number | null;
  UserUpdated: Generated<Date>;
  UserUpdatedBy: string;
}

export interface VerificationRequests {
  VerificationRequestAdded: Generated<Date>;
  VerificationRequestAddedBy: string;
  VerificationRequestDeleted: Date | null;
  VerificationRequestDeletedBy: string | null;
  VerificationRequestExpires: Generated<Date>;
  VerificationRequestID: Generated<number>;
  VerificationRequestIdentifier: string;
  VerificationRequestToken: string;
  VerificationRequestUpdated: Generated<Date>;
  VerificationRequestUpdatedBy: string;
}

export interface WeeklyMV {
  GamesCorrect: number;
  GamesMissed: number;
  GamesPossible: number;
  GamesTotal: number;
  GamesWrong: number;
  IsEliminated: Generated<number>;
  LastScore: number | null;
  LastUpdated: Generated<Date>;
  PointsEarned: number;
  PointsPossible: number;
  PointsTotal: number;
  PointsWrong: number;
  Rank: Generated<number>;
  TeamName: string;
  TiebreakerDiffAbsolute: number | null;
  TiebreakerIsUnder: number;
  TiebreakerScore: number | null;
  Tied: Generated<number>;
  UserID: number;
  UserName: string;
  Week: number;
  WeeklyMVID: Generated<number>;
}

export interface DB {
  Accounts: Accounts;
  ApiCalls: ApiCalls;
  APICalls: APICalls;
  Devices: Devices;
  Emails: Emails;
  Games: Games;
  History: History;
  Leagues: Leagues;
  Logs: Logs;
  migrations: Migrations;
  Notifications: Notifications;
  NotificationTypes: NotificationTypes;
  OverallMV: OverallMV;
  Payments: Payments;
  Picks: Picks;
  Sessions: Sessions;
  SupportContent: SupportContent;
  SurvivorMV: SurvivorMV;
  SurvivorPicks: SurvivorPicks;
  SystemValues: SystemValues;
  Teams: Teams;
  Tiebreakers: Tiebreakers;
  UserHistory: UserHistory;
  UserLeagues: UserLeagues;
  Users: Users;
  VerificationRequests: VerificationRequests;
  WeeklyMV: WeeklyMV;
}
